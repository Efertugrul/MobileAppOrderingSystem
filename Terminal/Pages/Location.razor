@page "/locations"
@using Models
@using Helpers

@if (locationRoot == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button @onclick="setShowModalTrue" class="btn btn-block" style="background-color:lightgreen; width:200px">New</button>
    <p style="margin:4px"></p>
    <table class="table">
        <thead>
            <tr>
                <th style="background-color: lightgrey">ID</th>
                <th style="background-color: lightgrey">Address Type</th>
                <th style="background-color: lightgrey">Address</th>
                <th style="background-color: lightgrey">Latitude</th>
                <th style="background-color: lightgrey">Longitude</th>
                <th style="background-color: lightgrey">Type ID</th>
                <th style="background-color: lightgrey">Created At</th>
                <th style="background-color: lightgrey">Updated At</th>
                <th style="background-color: lightgrey"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in locationRoot.locations)
            {
                <tr>
                    <td>@data.id</td>
                    <td>@data.address_type</td>
                    <td>@data.address</td>
                    <td>@data.latitude</td>
                    <td>@data.longitude</td>
                    <td>@data.type_id</td>
                    <td>@data.created_at</td>
                    <td>@data.updated_at</td>
                    <td><button class="btn btn-primary oi oi-pencil" style="margin-bottom:4px">Edit</button><button class="btn btn-danger oi oi-trash">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
    @if (showModal)
    {
        <div class="modal" tabindex="-1" role="dialog" style="display:block" id="taskModal">
            <div class="modal-dialog shadow-lg bg-white rounded" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add new location</h5>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="locationModel">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-group row">
                                <RIVA.Helpers.InputHelper type="Text" class="col-8 form-control" list="txtsearch" @bind-Value="locationModel.address_type" />
                                <datalist id="txtsearch">
				                    @foreach (var item in locationRoot.locations)
				                    {
					                    <option>@item.id</option>
				                    }
			                    </datalist>
                            </div>
                            <div class="form-group row">
                                <RIVA.Helpers.InputHelper type="Text" class="col-8 form-control" @bind-Value="locationModel.address" />
                            </div>
                            <div class="form-group row">
                                <RIVA.Helpers.InputHelper type="Text" class="col-8 form-control" @bind-Value="locationModel.latitudeTxt" />
                            </div>
                            <div class="form-group row">
                                <RIVA.Helpers.InputHelper type="Text" class="col-8 form-control" @bind-Value="locationModel.longitudeTxt" />
                            </div>
                            <div class="form-group row">
                                <RIVA.Helpers.InputHelper type="Text" class="col-8 form-control" @bind-Value="locationModel.type_idTxt" />
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary" @onclick="(e => Submit(locationModel))">Submit</button>
                                <button type="button" class="btn btn-secondary" @onclick="setShowModalFalse">Cancel</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    [Inject]
    private HttpClient Http { get; set; }
    private LocationRoot? locationRoot;
    private LocationModel locationModel = new LocationModel();
    bool showModal = false;

    protected override async Task OnInitializedAsync()
    {
        await getLocationData();
    }

    private void setShowModalTrue() => showModal = true;
    private void setShowModalFalse() => showModal = false;

    public async Task getLocationData()
    {
        locationRoot = await Http.GetFromJsonAsync<LocationRoot>("http://db.zenexserver.com/api/v1/locations/midpoint");
    }

    public async Task postLocationData(LocationModel locationObj)
    {
        using var response = await Http.PostAsJsonAsync("http://db.zenexserver.com/api/v1/locations/midpoint1", locationObj);
        await getLocationData();
    }

    public async Task Submit(LocationModel locationObj)
    {
        if(locationObj != null)
        {
            locationObj.latitude = Convert.ToDouble(locationObj.latitudeTxt);
            locationObj.longitude = Convert.ToDouble(locationObj.longitudeTxt);
            locationObj.type_id = Convert.ToInt32(locationObj.type_idTxt);
            await postLocationData(locationObj);
            setShowModalFalse();
        }
        await getLocationData();
    }
}