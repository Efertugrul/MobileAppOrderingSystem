@page "/tabledrag"
@using Models

<div class="top-row ps-3 navbar navbar-dark" style="margin-top:20px">
    <div class="container-fluid">
        <a class="navbar-brand" style="color:#6E0AEE" href="">RIVA Terminal&emsp;-&emsp;<strong>Set Order</strong></a>
        <button title="Navigation menu" class="navbar-toggler" style="background-color:#6E0AEE" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-row">
        <table>
            <th class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </th>
            <th class="nav-item px-3">
                <NavLink class="nav-link" href="orders">
                    <span class="oi oi-basket" aria-hidden="true"></span> Online Orders
                </NavLink>
            </th>
            <th class="nav-item px-3">
                <NavLink class="nav-link" href="locations">
                    <span class="oi oi-basket" aria-hidden="true"></span> Locations
                </NavLink>
            </th>
        </table>
    </nav>
</div>

@if (showModal)
{
    <div class="modal" tabindex="-1" role="dialog" style="display:block" id="taskModal">
        <div class="modal-dialog shadow-lg bg-white rounded" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Table</h5>
                </div>
                <div class="modal-body">
                    <EditForm Model="jobModel">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-group row">
                            <input type="number" @onchange="(e => ChangeNumberOfColumns(e))" placeholder="Enter number of columns..."/>
                            <input type="number" @onchange="(e => ChangeNumberOfTables(e))" placeholder="Enter number of tables..."/>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">submit</button>
                            <button type="button" class="btn btn-secondary" @onclick="setShowModalFalse">Cancel</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<button class="btn btn-primary" @onclick="setShowModalTrue">Edit Table</button>

<JobsContainer Jobs="Jobs" OnStatusUpdated="HandleStatusUpdated">
    @for(int i = 1; i <= columnNum; i++)
    {
        <JobList ListStatus="@i.ToString()"/>
    }
</JobsContainer>

<hr />
<p style="color:white">Last updated table was: <strong>@lastUpdatedJob</strong></p>
<hr />

@foreach (var task in Jobs)
{
    <p style="color:white">@task.Description - <strong>@task.Status</strong></p>
}

<style>
    body{
        background-color:#181818;
    }

    input{
        margin-bottom:10px;
        border-radius:7px;
        border:solid;
        border-block-color:#6E0AEE;
        height:50px;
    }
</style>

@code {
    List<JobModel> Jobs = new List<JobModel>();
    JobModel jobModel = new JobModel();
    string lastUpdatedJob = "";
    int columnNum = 5;
    bool showModal = false;
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void setShowModalTrue() => showModal = true;
    private void setShowModalFalse() => showModal = false;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        Jobs.Add(new JobModel { Id = 1, Description = "Table 1", Status = JobStatuses.Todo, LastUpdated = DateTime.Now, idmumber = "1" });
        Jobs.Add(new JobModel { Id = 2, Description = "Table 2", Status = JobStatuses.Todo, LastUpdated = DateTime.Now, idmumber = "1" });
        Jobs.Add(new JobModel { Id = 3, Description = "Table 3", Status = JobStatuses.Todo, LastUpdated = DateTime.Now, idmumber = "1" });
        Jobs.Add(new JobModel { Id = 4, Description = "Table 4", Status = JobStatuses.Todo, LastUpdated = DateTime.Now, idmumber = "1" });
        Jobs.Add(new JobModel { Id = 5, Description = "Table 5", Status = JobStatuses.Todo, LastUpdated = DateTime.Now, idmumber = "1" });
    }

    void HandleStatusUpdated(JobModel updatedJob)
    {
        lastUpdatedJob = updatedJob.Description;
    }

    private void FormTables(int numOfTables)
    {
        Jobs.Clear();
        for (int i = 1; i <= numOfTables; i++)
        {
            Jobs.Add(new JobModel 
                { Id = i, 
                  Description = "Table " + i.ToString(), 
                  Status = JobStatuses.Todo, 
                  LastUpdated = DateTime.Now, 
                  idmumber = "1" 
                });
        }
    }

    private void ChangeNumberOfColumns(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            columnNum = Int32.Parse(e.Value.ToString());
        }
        else
        {
            columnNum = 5;
        }
    }

    private void ChangeNumberOfTables(ChangeEventArgs e)
    {
        int numOfTables = 0;
        if (e.Value != null)
        {
            numOfTables = Int32.Parse(e.Value.ToString());
            FormTables(numOfTables);
        }
    }

    private void Submit()
    {
        
    }
}