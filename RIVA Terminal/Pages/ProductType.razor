@page "/product_types"
@using Models

@if (productTypeRoot == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-block" style="background-color:lightgreen; width:200px">New</button>
    <p style="margin:4px"></p>
    <table class="table">
        <thead>
            <tr>
                <th style="background-color: lightgrey">ID</th>
                <th style="background-color: lightgrey">Image</th>
                <th style="background-color: lightgrey">Title</th>
                <th style="background-color: lightgrey">Description</th>
                <th style="background-color: lightgrey">Created At</th>
                <th style="background-color: lightgrey">Updated At</th>
                <th style="background-color: lightgrey"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in productTypeRoot.product_types)
            {
                var imgUrl = imageUrl + data.img;
                <tr>
                    <td>@data.id</td>
                    <td><img src="@imgUrl" width="75" height="75" style="border-radius:10px" /></td>
                    <td>@data.title</td>
                    <td>@data.description</td>
                    <td>@data.created_at</td>
                    <td>@data.updated_at</td>
                    <td><button class="btn btn-primary oi oi-pencil" style="margin-bottom:4px">Edit</button><button class="btn btn-danger oi oi-trash">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Inject]
    private HttpClient Http { get; set; }
    private ProductTypeRoot? productTypeRoot;
    private String imageUrl = "http://db.zenexserver.com/uploads/";

    protected override async Task OnInitializedAsync()
    {
        productTypeRoot = await Http.GetFromJsonAsync<ProductTypeRoot>("http://db.zenexserver.com/api/v1/product_types/midpoint");
    }
}